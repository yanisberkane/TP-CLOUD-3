@model PostIndexViewModel //IEnumerable<MVC.Models.Post>

@{
    ViewData["Title"] = "Posts";
}
<p>
    <a asp-action="Create">Create New</a>
</p>

@foreach (var item in Model.Posts)
{
    <table class="table">
        <tbody>
            <tr>
                <br>
                @Html.DisplayFor(modelItem => item.Category) - @Html.DisplayFor(modelItem => item.Title)
                <br>

                @if (!string.IsNullOrEmpty(@item.Url))
                {
                    <img src="@item.Url" alt="Image" />
                }

                <td>
                    <form asp-action="Like" asp-route-id="@item.Id" method="post">
                        <button type="submit" class="btn btn-outline-secondary d-inline-flex align-items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5" />
                            </svg>
                            @item.Like.ToString()
                        </button>
                    </form>

                </td>
                <td>
                    <form asp-action="Dislike" asp-route-id="@item.Id" method="post">
                        <button type="submit" class="btn btn-outline-secondary d-inline-flex align-items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1" />
                            </svg>
                            @item.Dislike.ToString()
                        </button>
                    </form>
                </td>
                <td>
                    <a asp-action="Index" asp-controller="Comments" asp-route-id="@item.Id" input type="button" class="btn btn-outline-secondary d-inline-flex">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-left-text" viewBox="0 0 16 16">
                            <path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                            <path d="M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6m0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5" />
                        </svg>
                        @item.Comments.Count()
                    </a>
                </td>
                <td>
                    @{
                        if (item.IsApproved.HasValue)
                        {
                            if (item.IsApproved.GetValueOrDefault(false))
                            {
                                <span class="badge bg-success">Validated</span>
                            }
                            else
                            {
                                <span class="badge bg-danger text-dark">UnApproved</span>
                            }
                        }
                        else
                        {
                              <span class="badge bg-warning text-dark">UnValidated</span>
                        }

                    }
               </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User)
                </td>
            </tr>
        </tbody>
    </table>
}

<div>
    Page @(Model.CurrentPage) of @(Model.TotalPages)
</div>

@if (Model.CurrentPage > 1)
{
        <a asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize">Previous</a>
}
@for (int i = 1; i <= Model.TotalPages; i++)
{
        <a asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a>
}
@if (Model.CurrentPage < Model.TotalPages)
{
        <a asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize">Next</a>
}
